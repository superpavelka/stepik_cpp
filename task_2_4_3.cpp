/* Напишите функцию поиска первого вхождения шаблона в текст. 
В качестве первого параметра функция принимает текст (C-style строка), в которой нужно искать шаблон. 
В качестве второго параметра строку-шаблон (C-style строка), которую нужно найти. 
Функция возвращает позицию первого вхождения строки-шаблона, если он присутствует в строке 
(помните, что в C++ принято считать с 0), и -1, если шаблона в тексте нет.

Учтите, что пустой шаблон (строка длины 0) можно найти в любом месте текста.

Требования к реализации: при выполнении данного задания вы можете определять любые 
вспомогательные функции, если они вам нужны. Вводить или выводить что-либо не нужно. 
Реализовывать функцию main не нужно.
*/

int strstr(const char *text, const char *pattern)
{
	int cp = 0;
	int ct = 0;
	int n = 0;
	bool equal = false;
	while (*(pattern + cp) != '\0')
		cp++;
	if (cp == 0)
		return 0;
	while (*(text + ct) != '\0')
	{
		if (*(pattern) == *(text + ct))
		{
			n = ct;
			for (int i = 0; i < cp; i++)
			{
				if (*(pattern + i) == *(text + ct))
					equal = true;
				else
					equal = false;
				if ((*(text + ct) == '\0') || (equal == false))
					break;
				ct++;
			}
			ct = n + 1;
			if (equal == true)
				return n;
		}

		ct++;
	}
	return -1;
	}